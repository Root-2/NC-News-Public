{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all topics",
    "queries": ["author", "topic", "sort_by", "order"],
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": 1527695953341
        }
      ]
    }
  },
  "GET /api/articles/:article_id": {
    "description": "Serves a specific article and a Comment Count.",
    "queries": ["none"],
    "exampleResponse": {
      "article_id": 1,
      "title": "Running a Node App",
      "topic": "coding",
      "author": "jessjelly",
      "body": "This is part two of a series on how to get up and running with Systemd and Node.js. This part dives deeper into how to successfully run your app with systemd long-term, and how to set it up in a production environment.",
      "created_at": "2020-11-07T06:03:00.000Z",
      "votes": 0,
      "comment_count": 7
    }
},
"GET /api/articles/:article_id/comments": {
  "description": "Serves the list of an articles comments.",
  "queries": ["none"],
  "exampleResponse": [
    {
      "comment_id": 33,
      "votes": 4,
      "created_at": "2019-12-31T21:21:00.000Z",
      "author": "cooljmessy",
      "body": "Explicabo perspiciatis voluptatem sunt tenetur maxime aut. Optio totam modi. Perspiciatis et quia."
    }]
},

"PATCH /api/articles/:article_id/": {
  "description": "Serves the list of an articles comments.",
  "accepts" : "An object in the form {inc_votes: newVote}, where newVote is how much to increment or decrement the votes by.",
  "exampleResponse": "Responds with updated article."
    
},

"POST /api/articles/:article_id/comments": {
  "description": "Adds a new comment ot the article.",
  "accepts": "An object with the properties of 'username' and 'body'.",
  "exampleResponse": {
		"comment_id": 33,
		"votes": 0,
		"created_at": "2019-12-31T21:21:00.000Z",
		"author": "cooljmessy",
		"body": "Explicabo perspiciatis voluptatem sunt tenetur maxime aut. Optio totam modi. Perspiciatis et quia."
	},

  "DELETE /api/comments/:comment_id": {
    "description": "Deletes the identified comment. Does not return data."
  }
}
}
